// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/MeshProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PNet.Actor.Mesh.Protos {

  /// <summary>Holder for reflection information generated from Protos/MeshProtocol.proto</summary>
  public static partial class MeshProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/MeshProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MeshProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90b3MvTWVzaFByb3RvY29sLnByb3RvGh9nb29nbGUvcHJvdG9idWYv",
            "dGltZXN0YW1wLnByb3RvIrwCCgZQYWNrZXQSGQoHcGF5bG9hZBgBIAMoCzII",
            "LlBheWxvYWQSEQoDYWNrGAIgASgLMgQuQWNrEhEKA3N5bhgDIAEoCzIELlN5",
            "bhILCgNyc3QYBCABKAgSFQoFcHJvYmUYBSABKAsyBi5Qcm9iZRIgCgtwcm9i",
            "ZV9yZXBseRgGIAEoCzILLlByb2JlUmVwbHkSLgoSY2FuZGlkYXRlX2V4Y2hh",
            "bmdlGAcgASgLMhIuQ2FuZGlkYXRlRXhjaGFuZ2USFQoFcmVsYXkYCCADKAsy",
            "Bi5SZWxheRIhCgtjb21wcmVzc2lvbhgJIAMoCzIMLkNvbXByZXNzaW9uEi0K",
            "CXRpbWVzdGFtcBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "EgoKZG9fbm90X2FjaxgLIAEoCCKOAQoHUGF5bG9hZBINCgNyYXcYASABKAxI",
            "ABIRCgdkZWZsYXRlGAIgASgMSAASEAoGYnJvdGxpGAMgASgMSAASDgoEenN0",
            "ZBgEIAEoDEgAEg0KA2x6NBgFIAEoDEgAEhUKDWRpY3Rpb25hcnlfaWQYBiAB",
            "KAUSEQoJZGF0YV9zaXplGAcgASgFQgYKBGRhdGEiygIKA1N5bhIPCgd2ZXJz",
            "aW9uGAEgASgFEhUKDWNvbm5lY3Rpb25faWQYAiABKAUSGwoTbWF4X291dHN0",
            "YW5kaW5nX3NlcRgDIAEoBRIXCg9tYXhfcGFja2V0X3NpemUYBCABKAUSHgoW",
            "cmV0cmFuc21pc3Npb25fdGltZW91dBgFIAEoBRIeChZjdW11bGF0aXZlX2Fj",
            "a190aW1lb3V0GAYgASgFEhwKFG51bGxfc2VnbWVudF90aW1lb3V0GAcgASgF",
            "Eh4KFnRyYW5zZmVyX3N0YXRlX3RpbWVvdXQYCCABKAUSEwoLbWF4X3JldHJh",
            "bnMYCSABKAUSEwoLbWF4X2N1bV9hY2sYCiABKAUSFgoObWF4X291dF9vZl9z",
            "ZXEYCyABKAUSFgoObWF4X2F1dG9fcmVzZXQYDCABKAUSDQoFcmV1c2UYDSAB",
            "KAgiSAoDQWNrEhYKDmFja19zZXFfbnVtYmVyGAEgASgEEhoKEm91dF9vZl9z",
            "ZXFfcGFja2V0cxgCIAEoDBINCgVkZWxheRgDIAMoBSJlCgVQcm9iZRIKCgJp",
            "ZBgBIAEoBRItCgl0aW1lc3RhbXAYAiABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEhEKCWVjbl9jaGVjaxgDIAEoCBIOCgZyZXBvcnQYBCABKAgi",
            "jwIKClByb2JlUmVwbHkSCgoCaWQYASABKAUSNAoQc2VuZGVyX3RpbWVzdGFt",
            "cBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNgoScmVjaWV2",
            "ZXJfdGltZXN0YW1wGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIjCg5zZW5kZXJfYWRkcmVzcxgEIAEoCzILLklQRW5kUG9pbnQSHAoDZWNu",
            "GAUgASgOMg8uUHJvYmVSZXBseS5FQ04SFwoGcmVwb3J0GAYgASgLMgcuUmVw",
            "b3J0IisKA0VDThIICgROT05FEAASCAoERUNUMBABEggKBEVDVDEQAhIGCgJD",
            "RRADImEKBlJlcG9ydBIUCgxsb3N0X3BhY2tldHMYASABKAUSFAoMZHVwbGlj",
            "YXRpb25zGAIgASgFEg4KBmVjbl9jZRgDIAEoBRILCgNlY3QYBCABKAUSDgoG",
            "bm9fZWN0GAUgASgFImoKEUNhbmRpZGF0ZUV4Y2hhbmdlEh4KCmNhbmRpZGF0",
            "ZXMYASADKAsyCi5DYW5kaWRhdGUSDAoEbGl0ZRgCIAEoCBIUCgxjaGVja19w",
            "YWNpbmcYAyABKA0SEQoJdXNlcl9wYXNzGAQgASgJIrICCglDYW5kaWRhdGUS",
            "GgoHYWRkcmVzcxgBIAEoCzIJLkVuZFBvaW50EiUKCHByb3RvY29sGAIgASgO",
            "MhMuQ2FuZGlkYXRlLlByb3RvY29sEhIKCmZvdW5kYXRpb24YAyABKAkSFAoM",
            "Y29tcG9uZW50X2lkGAQgASgNEhAKCHByaW9yaXR5GAUgASgNEh0KBHR5cGUY",
            "BiABKA4yDy5DYW5kaWRhdGUuVHlwZRIiCg9yZWxhdGVkX2FkZHJlc3MYByAB",
            "KAsyCS5FbmRQb2ludCIcCghQcm90b2NvbBIHCgNVRFAQABIHCgNUQ1AQASJF",
            "CgRUeXBlEggKBEhvc3QQABITCg9TZXJ2ZXJSZWZsZXhpdmUQARIRCg1QZWVy",
            "UmVmbGV4aXZlEAISCwoHUmVsYXllZBADIrkBCgVSZWxheRIeCgdhZGRyZXNz",
            "GAEgASgLMg0uTWVzaEVuZFBvaW50EhIKCnNlcV9udW1iZXIYAiABKAQSLgoS",
            "Y2FuZGlkYXRlX2V4Y2hhbmdlGAMgASgLMhIuQ2FuZGlkYXRlRXhjaGFuZ2US",
            "EQoJaG9wX2NvdW50GAQgASgNEhwKBXJvdXRlGAUgAygLMg0uTWVzaEVuZFBv",
            "aW50EhAKBnBhY2tldBgGIAEoDEgAQgkKB3BheWxvYWQiagoIRW5kUG9pbnQS",
            "GQoCaXAYASABKAsyCy5JUEVuZFBvaW50SAASGwoDZG5zGAIgASgLMgwuRG5z",
            "RW5kUG9pbnRIABIdCgRtZXNoGAMgASgLMg0uTWVzaEVuZFBvaW50SABCBwoF",
            "dmFsdWUiPAoKSVBFbmRQb2ludBIMCgJ2NBgBIAEoB0gAEgwKAnY2GAIgASgM",
            "SAASDAoEcG9ydBgDIAEoDUIECgJpcCItCgtEbnNFbmRQb2ludBIQCghob3N0",
            "bmFtZRgBIAEoCRIMCgRwb3J0GAIgASgNIjcKDE1lc2hFbmRQb2ludBIQCgZz",
            "dGF0aWMYASABKAxIABIOCgRoYXNoGAIgASgMSABCBQoDa2V5IrcBCgtDb21w",
            "cmVzc2lvbhIfCgR0eXBlGAEgASgOMhEuQ29tcHJlc3Npb24uVHlwZRIVCg1k",
            "aWN0aW9uYXJ5X2lkGAIgASgFEhcKD2RpY3Rpb25hcnlfaGFzaBgDIAEoDBIZ",
            "ChFkaWN0aW9uYXJ5X3NvdXJjZRgEIAEoCSI8CgRUeXBlEggKBE5PTkUQABIL",
            "CgdERUZMQVRFEAESCgoGQlJPVExJEAISCAoEWlNURBADEgcKA0xaNBAEQhmq",
            "AhZQTmV0LkFjdG9yLk1lc2guUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.Packet), global::PNet.Actor.Mesh.Protos.Packet.Parser, new[]{ "Payload", "Ack", "Syn", "Rst", "Probe", "ProbeReply", "CandidateExchange", "Relay", "Compression", "Timestamp", "DoNotAck" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.Payload), global::PNet.Actor.Mesh.Protos.Payload.Parser, new[]{ "Raw", "Deflate", "Brotli", "Zstd", "Lz4", "DictionaryId", "DataSize" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.Syn), global::PNet.Actor.Mesh.Protos.Syn.Parser, new[]{ "Version", "ConnectionId", "MaxOutstandingSeq", "MaxPacketSize", "RetransmissionTimeout", "CumulativeAckTimeout", "NullSegmentTimeout", "TransferStateTimeout", "MaxRetrans", "MaxCumAck", "MaxOutOfSeq", "MaxAutoReset", "Reuse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.Ack), global::PNet.Actor.Mesh.Protos.Ack.Parser, new[]{ "AckSeqNumber", "OutOfSeqPackets", "Delay" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.Probe), global::PNet.Actor.Mesh.Protos.Probe.Parser, new[]{ "Id", "Timestamp", "EcnCheck", "Report" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.ProbeReply), global::PNet.Actor.Mesh.Protos.ProbeReply.Parser, new[]{ "Id", "SenderTimestamp", "RecieverTimestamp", "SenderAddress", "Ecn", "Report" }, null, new[]{ typeof(global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.Report), global::PNet.Actor.Mesh.Protos.Report.Parser, new[]{ "LostPackets", "Duplications", "EcnCe", "Ect", "NoEct" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.CandidateExchange), global::PNet.Actor.Mesh.Protos.CandidateExchange.Parser, new[]{ "Candidates", "Lite", "CheckPacing", "UserPass" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.Candidate), global::PNet.Actor.Mesh.Protos.Candidate.Parser, new[]{ "Address", "Protocol", "Foundation", "ComponentId", "Priority", "Type", "RelatedAddress" }, null, new[]{ typeof(global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol), typeof(global::PNet.Actor.Mesh.Protos.Candidate.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.Relay), global::PNet.Actor.Mesh.Protos.Relay.Parser, new[]{ "Address", "SeqNumber", "CandidateExchange", "HopCount", "Route", "Packet" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.EndPoint), global::PNet.Actor.Mesh.Protos.EndPoint.Parser, new[]{ "Ip", "Dns", "Mesh" }, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.IPEndPoint), global::PNet.Actor.Mesh.Protos.IPEndPoint.Parser, new[]{ "V4", "V6", "Port" }, new[]{ "Ip" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.DnsEndPoint), global::PNet.Actor.Mesh.Protos.DnsEndPoint.Parser, new[]{ "Hostname", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.MeshEndPoint), global::PNet.Actor.Mesh.Protos.MeshEndPoint.Parser, new[]{ "Static", "Hash" }, new[]{ "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PNet.Actor.Mesh.Protos.Compression), global::PNet.Actor.Mesh.Protos.Compression.Parser, new[]{ "Type", "DictionaryId", "DictionaryHash", "DictionarySource" }, null, new[]{ typeof(global::PNet.Actor.Mesh.Protos.Compression.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Packet : pb::IMessage<Packet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Packet> _parser = new pb::MessageParser<Packet>(() => new Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet(Packet other) : this() {
      payload_ = other.payload_.Clone();
      ack_ = other.ack_ != null ? other.ack_.Clone() : null;
      syn_ = other.syn_ != null ? other.syn_.Clone() : null;
      rst_ = other.rst_;
      probe_ = other.probe_ != null ? other.probe_.Clone() : null;
      probeReply_ = other.probeReply_ != null ? other.probeReply_.Clone() : null;
      candidateExchange_ = other.candidateExchange_ != null ? other.candidateExchange_.Clone() : null;
      relay_ = other.relay_.Clone();
      compression_ = other.compression_.Clone();
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      doNotAck_ = other.doNotAck_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet Clone() {
      return new Packet(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PNet.Actor.Mesh.Protos.Payload> _repeated_payload_codec
        = pb::FieldCodec.ForMessage(10, global::PNet.Actor.Mesh.Protos.Payload.Parser);
    private readonly pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Payload> payload_ = new pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Payload>();
    /// <summary>
    ///
    ///message payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Payload> Payload {
      get { return payload_; }
    }

    /// <summary>Field number for the "ack" field.</summary>
    public const int AckFieldNumber = 2;
    private global::PNet.Actor.Mesh.Protos.Ack ack_;
    /// <summary>
    ///
    ///The acknowledgment segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.Ack Ack {
      get { return ack_; }
      set {
        ack_ = value;
      }
    }

    /// <summary>Field number for the "syn" field.</summary>
    public const int SynFieldNumber = 3;
    private global::PNet.Actor.Mesh.Protos.Syn syn_;
    /// <summary>
    ///
    ///The syn segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.Syn Syn {
      get { return syn_; }
      set {
        syn_ = value;
      }
    }

    /// <summary>Field number for the "rst" field.</summary>
    public const int RstFieldNumber = 4;
    private bool rst_;
    /// <summary>
    ///
    ///The RST segment is used to close or reset a connection.  Upon receipt of an 
    ///RST segment, the sender must stop sending new packets, but must continue 
    ///to attempt delivery of packets already accepted from the API.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Rst {
      get { return rst_; }
      set {
        rst_ = value;
      }
    }

    /// <summary>Field number for the "probe" field.</summary>
    public const int ProbeFieldNumber = 5;
    private global::PNet.Actor.Mesh.Protos.Probe probe_;
    /// <summary>
    ///
    ///The Probe segment is used to determine if the other side of a connection 
    ///is still active.  Thus, the Probe segment performs a keep-alive function.  
    ///When a Probe segment is received, an RUDP implementation must immediately
    ///send a ProbeReply packet and acknowledge the segment if a valid connection 
    ///exists and the segment sequence number is the next one in sequence.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.Probe Probe {
      get { return probe_; }
      set {
        probe_ = value;
      }
    }

    /// <summary>Field number for the "probe_reply" field.</summary>
    public const int ProbeReplyFieldNumber = 6;
    private global::PNet.Actor.Mesh.Protos.ProbeReply probeReply_;
    /// <summary>
    ///
    ///reply of probe request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.ProbeReply ProbeReply {
      get { return probeReply_; }
      set {
        probeReply_ = value;
      }
    }

    /// <summary>Field number for the "candidate_exchange" field.</summary>
    public const int CandidateExchangeFieldNumber = 7;
    private global::PNet.Actor.Mesh.Protos.CandidateExchange candidateExchange_;
    /// <summary>
    ///
    ///Interactive Connectivity Establishment (ICE)
    ///https://tools.ietf.org/html/rfc8445
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.CandidateExchange CandidateExchange {
      get { return candidateExchange_; }
      set {
        candidateExchange_ = value;
      }
    }

    /// <summary>Field number for the "relay" field.</summary>
    public const int RelayFieldNumber = 8;
    private static readonly pb::FieldCodec<global::PNet.Actor.Mesh.Protos.Relay> _repeated_relay_codec
        = pb::FieldCodec.ForMessage(66, global::PNet.Actor.Mesh.Protos.Relay.Parser);
    private readonly pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Relay> relay_ = new pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Relay>();
    /// <summary>
    ///
    ///relay to destination
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Relay> Relay {
      get { return relay_; }
    }

    /// <summary>Field number for the "compression" field.</summary>
    public const int CompressionFieldNumber = 9;
    private static readonly pb::FieldCodec<global::PNet.Actor.Mesh.Protos.Compression> _repeated_compression_codec
        = pb::FieldCodec.ForMessage(74, global::PNet.Actor.Mesh.Protos.Compression.Parser);
    private readonly pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Compression> compression_ = new pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Compression>();
    /// <summary>
    ///
    ///compression support
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Compression> Compression {
      get { return compression_; }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    ///
    ///LEDBAT timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "do_not_ack" field.</summary>
    public const int DoNotAckFieldNumber = 11;
    private bool doNotAck_;
    /// <summary>
    ///
    ///sender asumes the packet as acknowled
    ///should not start the ack-timer of the receivers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DoNotAck {
      get { return doNotAck_; }
      set {
        doNotAck_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!payload_.Equals(other.payload_)) return false;
      if (!object.Equals(Ack, other.Ack)) return false;
      if (!object.Equals(Syn, other.Syn)) return false;
      if (Rst != other.Rst) return false;
      if (!object.Equals(Probe, other.Probe)) return false;
      if (!object.Equals(ProbeReply, other.ProbeReply)) return false;
      if (!object.Equals(CandidateExchange, other.CandidateExchange)) return false;
      if(!relay_.Equals(other.relay_)) return false;
      if(!compression_.Equals(other.compression_)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (DoNotAck != other.DoNotAck) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= payload_.GetHashCode();
      if (ack_ != null) hash ^= Ack.GetHashCode();
      if (syn_ != null) hash ^= Syn.GetHashCode();
      if (Rst != false) hash ^= Rst.GetHashCode();
      if (probe_ != null) hash ^= Probe.GetHashCode();
      if (probeReply_ != null) hash ^= ProbeReply.GetHashCode();
      if (candidateExchange_ != null) hash ^= CandidateExchange.GetHashCode();
      hash ^= relay_.GetHashCode();
      hash ^= compression_.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (DoNotAck != false) hash ^= DoNotAck.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      payload_.WriteTo(output, _repeated_payload_codec);
      if (ack_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Ack);
      }
      if (syn_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Syn);
      }
      if (Rst != false) {
        output.WriteRawTag(32);
        output.WriteBool(Rst);
      }
      if (probe_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Probe);
      }
      if (probeReply_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ProbeReply);
      }
      if (candidateExchange_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CandidateExchange);
      }
      relay_.WriteTo(output, _repeated_relay_codec);
      compression_.WriteTo(output, _repeated_compression_codec);
      if (timestamp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Timestamp);
      }
      if (DoNotAck != false) {
        output.WriteRawTag(88);
        output.WriteBool(DoNotAck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      payload_.WriteTo(ref output, _repeated_payload_codec);
      if (ack_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Ack);
      }
      if (syn_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Syn);
      }
      if (Rst != false) {
        output.WriteRawTag(32);
        output.WriteBool(Rst);
      }
      if (probe_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Probe);
      }
      if (probeReply_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ProbeReply);
      }
      if (candidateExchange_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CandidateExchange);
      }
      relay_.WriteTo(ref output, _repeated_relay_codec);
      compression_.WriteTo(ref output, _repeated_compression_codec);
      if (timestamp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Timestamp);
      }
      if (DoNotAck != false) {
        output.WriteRawTag(88);
        output.WriteBool(DoNotAck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += payload_.CalculateSize(_repeated_payload_codec);
      if (ack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ack);
      }
      if (syn_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Syn);
      }
      if (Rst != false) {
        size += 1 + 1;
      }
      if (probe_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Probe);
      }
      if (probeReply_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProbeReply);
      }
      if (candidateExchange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CandidateExchange);
      }
      size += relay_.CalculateSize(_repeated_relay_codec);
      size += compression_.CalculateSize(_repeated_compression_codec);
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (DoNotAck != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet other) {
      if (other == null) {
        return;
      }
      payload_.Add(other.payload_);
      if (other.ack_ != null) {
        if (ack_ == null) {
          Ack = new global::PNet.Actor.Mesh.Protos.Ack();
        }
        Ack.MergeFrom(other.Ack);
      }
      if (other.syn_ != null) {
        if (syn_ == null) {
          Syn = new global::PNet.Actor.Mesh.Protos.Syn();
        }
        Syn.MergeFrom(other.Syn);
      }
      if (other.Rst != false) {
        Rst = other.Rst;
      }
      if (other.probe_ != null) {
        if (probe_ == null) {
          Probe = new global::PNet.Actor.Mesh.Protos.Probe();
        }
        Probe.MergeFrom(other.Probe);
      }
      if (other.probeReply_ != null) {
        if (probeReply_ == null) {
          ProbeReply = new global::PNet.Actor.Mesh.Protos.ProbeReply();
        }
        ProbeReply.MergeFrom(other.ProbeReply);
      }
      if (other.candidateExchange_ != null) {
        if (candidateExchange_ == null) {
          CandidateExchange = new global::PNet.Actor.Mesh.Protos.CandidateExchange();
        }
        CandidateExchange.MergeFrom(other.CandidateExchange);
      }
      relay_.Add(other.relay_);
      compression_.Add(other.compression_);
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.DoNotAck != false) {
        DoNotAck = other.DoNotAck;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            payload_.AddEntriesFrom(input, _repeated_payload_codec);
            break;
          }
          case 18: {
            if (ack_ == null) {
              Ack = new global::PNet.Actor.Mesh.Protos.Ack();
            }
            input.ReadMessage(Ack);
            break;
          }
          case 26: {
            if (syn_ == null) {
              Syn = new global::PNet.Actor.Mesh.Protos.Syn();
            }
            input.ReadMessage(Syn);
            break;
          }
          case 32: {
            Rst = input.ReadBool();
            break;
          }
          case 42: {
            if (probe_ == null) {
              Probe = new global::PNet.Actor.Mesh.Protos.Probe();
            }
            input.ReadMessage(Probe);
            break;
          }
          case 50: {
            if (probeReply_ == null) {
              ProbeReply = new global::PNet.Actor.Mesh.Protos.ProbeReply();
            }
            input.ReadMessage(ProbeReply);
            break;
          }
          case 58: {
            if (candidateExchange_ == null) {
              CandidateExchange = new global::PNet.Actor.Mesh.Protos.CandidateExchange();
            }
            input.ReadMessage(CandidateExchange);
            break;
          }
          case 66: {
            relay_.AddEntriesFrom(input, _repeated_relay_codec);
            break;
          }
          case 74: {
            compression_.AddEntriesFrom(input, _repeated_compression_codec);
            break;
          }
          case 82: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 88: {
            DoNotAck = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            payload_.AddEntriesFrom(ref input, _repeated_payload_codec);
            break;
          }
          case 18: {
            if (ack_ == null) {
              Ack = new global::PNet.Actor.Mesh.Protos.Ack();
            }
            input.ReadMessage(Ack);
            break;
          }
          case 26: {
            if (syn_ == null) {
              Syn = new global::PNet.Actor.Mesh.Protos.Syn();
            }
            input.ReadMessage(Syn);
            break;
          }
          case 32: {
            Rst = input.ReadBool();
            break;
          }
          case 42: {
            if (probe_ == null) {
              Probe = new global::PNet.Actor.Mesh.Protos.Probe();
            }
            input.ReadMessage(Probe);
            break;
          }
          case 50: {
            if (probeReply_ == null) {
              ProbeReply = new global::PNet.Actor.Mesh.Protos.ProbeReply();
            }
            input.ReadMessage(ProbeReply);
            break;
          }
          case 58: {
            if (candidateExchange_ == null) {
              CandidateExchange = new global::PNet.Actor.Mesh.Protos.CandidateExchange();
            }
            input.ReadMessage(CandidateExchange);
            break;
          }
          case 66: {
            relay_.AddEntriesFrom(ref input, _repeated_relay_codec);
            break;
          }
          case 74: {
            compression_.AddEntriesFrom(ref input, _repeated_compression_codec);
            break;
          }
          case 82: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 88: {
            DoNotAck = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Payload : pb::IMessage<Payload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Payload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload(Payload other) : this() {
      dictionaryId_ = other.dictionaryId_;
      dataSize_ = other.dataSize_;
      switch (other.DataCase) {
        case DataOneofCase.Raw:
          Raw = other.Raw;
          break;
        case DataOneofCase.Deflate:
          Deflate = other.Deflate;
          break;
        case DataOneofCase.Brotli:
          Brotli = other.Brotli;
          break;
        case DataOneofCase.Zstd:
          Zstd = other.Zstd;
          break;
        case DataOneofCase.Lz4:
          Lz4 = other.Lz4;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload Clone() {
      return new Payload(this);
    }

    /// <summary>Field number for the "raw" field.</summary>
    public const int RawFieldNumber = 1;
    /// <summary>
    ///
    ///raw payload data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Raw {
      get { return dataCase_ == DataOneofCase.Raw ? (pb::ByteString) data_ : pb::ByteString.Empty; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Raw;
      }
    }

    /// <summary>Field number for the "deflate" field.</summary>
    public const int DeflateFieldNumber = 2;
    /// <summary>
    ///
    ///deflate compressed proto3 of a Payload message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deflate {
      get { return dataCase_ == DataOneofCase.Deflate ? (pb::ByteString) data_ : pb::ByteString.Empty; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Deflate;
      }
    }

    /// <summary>Field number for the "brotli" field.</summary>
    public const int BrotliFieldNumber = 3;
    /// <summary>
    ///
    ///brotli compressed proto3 of a Payload message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Brotli {
      get { return dataCase_ == DataOneofCase.Brotli ? (pb::ByteString) data_ : pb::ByteString.Empty; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Brotli;
      }
    }

    /// <summary>Field number for the "zstd" field.</summary>
    public const int ZstdFieldNumber = 4;
    /// <summary>
    ///
    ///zstd compressed proto3 of a Payload message
    ///https://github.com/facebook/zstd
    ///has dictionary support
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Zstd {
      get { return dataCase_ == DataOneofCase.Zstd ? (pb::ByteString) data_ : pb::ByteString.Empty; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Zstd;
      }
    }

    /// <summary>Field number for the "lz4" field.</summary>
    public const int Lz4FieldNumber = 5;
    /// <summary>
    ///
    ///lz4 compressed proto3 of a Payload message
    ///https://github.com/lz4/lz4
    ///has dictionary support, comp. with zstd but only last 64k used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Lz4 {
      get { return dataCase_ == DataOneofCase.Lz4 ? (pb::ByteString) data_ : pb::ByteString.Empty; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Lz4;
      }
    }

    /// <summary>Field number for the "dictionary_id" field.</summary>
    public const int DictionaryIdFieldNumber = 6;
    private int dictionaryId_;
    /// <summary>
    ///
    ///compression dictionary to used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DictionaryId {
      get { return dictionaryId_; }
      set {
        dictionaryId_ = value;
      }
    }

    /// <summary>Field number for the "data_size" field.</summary>
    public const int DataSizeFieldNumber = 7;
    private int dataSize_;
    /// <summary>
    ///
    ///decompressed data size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DataSize {
      get { return dataSize_; }
      set {
        dataSize_ = value;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Raw = 1,
      Deflate = 2,
      Brotli = 3,
      Zstd = 4,
      Lz4 = 5,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Payload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Payload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Raw != other.Raw) return false;
      if (Deflate != other.Deflate) return false;
      if (Brotli != other.Brotli) return false;
      if (Zstd != other.Zstd) return false;
      if (Lz4 != other.Lz4) return false;
      if (DictionaryId != other.DictionaryId) return false;
      if (DataSize != other.DataSize) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.Raw) hash ^= Raw.GetHashCode();
      if (dataCase_ == DataOneofCase.Deflate) hash ^= Deflate.GetHashCode();
      if (dataCase_ == DataOneofCase.Brotli) hash ^= Brotli.GetHashCode();
      if (dataCase_ == DataOneofCase.Zstd) hash ^= Zstd.GetHashCode();
      if (dataCase_ == DataOneofCase.Lz4) hash ^= Lz4.GetHashCode();
      if (DictionaryId != 0) hash ^= DictionaryId.GetHashCode();
      if (DataSize != 0) hash ^= DataSize.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataCase_ == DataOneofCase.Raw) {
        output.WriteRawTag(10);
        output.WriteBytes(Raw);
      }
      if (dataCase_ == DataOneofCase.Deflate) {
        output.WriteRawTag(18);
        output.WriteBytes(Deflate);
      }
      if (dataCase_ == DataOneofCase.Brotli) {
        output.WriteRawTag(26);
        output.WriteBytes(Brotli);
      }
      if (dataCase_ == DataOneofCase.Zstd) {
        output.WriteRawTag(34);
        output.WriteBytes(Zstd);
      }
      if (dataCase_ == DataOneofCase.Lz4) {
        output.WriteRawTag(42);
        output.WriteBytes(Lz4);
      }
      if (DictionaryId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(DictionaryId);
      }
      if (DataSize != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DataSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataCase_ == DataOneofCase.Raw) {
        output.WriteRawTag(10);
        output.WriteBytes(Raw);
      }
      if (dataCase_ == DataOneofCase.Deflate) {
        output.WriteRawTag(18);
        output.WriteBytes(Deflate);
      }
      if (dataCase_ == DataOneofCase.Brotli) {
        output.WriteRawTag(26);
        output.WriteBytes(Brotli);
      }
      if (dataCase_ == DataOneofCase.Zstd) {
        output.WriteRawTag(34);
        output.WriteBytes(Zstd);
      }
      if (dataCase_ == DataOneofCase.Lz4) {
        output.WriteRawTag(42);
        output.WriteBytes(Lz4);
      }
      if (DictionaryId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(DictionaryId);
      }
      if (DataSize != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DataSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.Raw) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Raw);
      }
      if (dataCase_ == DataOneofCase.Deflate) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Deflate);
      }
      if (dataCase_ == DataOneofCase.Brotli) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Brotli);
      }
      if (dataCase_ == DataOneofCase.Zstd) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Zstd);
      }
      if (dataCase_ == DataOneofCase.Lz4) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Lz4);
      }
      if (DictionaryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DictionaryId);
      }
      if (DataSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DataSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Payload other) {
      if (other == null) {
        return;
      }
      if (other.DictionaryId != 0) {
        DictionaryId = other.DictionaryId;
      }
      if (other.DataSize != 0) {
        DataSize = other.DataSize;
      }
      switch (other.DataCase) {
        case DataOneofCase.Raw:
          Raw = other.Raw;
          break;
        case DataOneofCase.Deflate:
          Deflate = other.Deflate;
          break;
        case DataOneofCase.Brotli:
          Brotli = other.Brotli;
          break;
        case DataOneofCase.Zstd:
          Zstd = other.Zstd;
          break;
        case DataOneofCase.Lz4:
          Lz4 = other.Lz4;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Raw = input.ReadBytes();
            break;
          }
          case 18: {
            Deflate = input.ReadBytes();
            break;
          }
          case 26: {
            Brotli = input.ReadBytes();
            break;
          }
          case 34: {
            Zstd = input.ReadBytes();
            break;
          }
          case 42: {
            Lz4 = input.ReadBytes();
            break;
          }
          case 48: {
            DictionaryId = input.ReadInt32();
            break;
          }
          case 56: {
            DataSize = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Raw = input.ReadBytes();
            break;
          }
          case 18: {
            Deflate = input.ReadBytes();
            break;
          }
          case 26: {
            Brotli = input.ReadBytes();
            break;
          }
          case 34: {
            Zstd = input.ReadBytes();
            break;
          }
          case 42: {
            Lz4 = input.ReadBytes();
            break;
          }
          case 48: {
            DictionaryId = input.ReadInt32();
            break;
          }
          case 56: {
            DataSize = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Syn : pb::IMessage<Syn>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Syn> _parser = new pb::MessageParser<Syn>(() => new Syn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Syn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Syn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Syn(Syn other) : this() {
      version_ = other.version_;
      connectionId_ = other.connectionId_;
      maxOutstandingSeq_ = other.maxOutstandingSeq_;
      maxPacketSize_ = other.maxPacketSize_;
      retransmissionTimeout_ = other.retransmissionTimeout_;
      cumulativeAckTimeout_ = other.cumulativeAckTimeout_;
      nullSegmentTimeout_ = other.nullSegmentTimeout_;
      transferStateTimeout_ = other.transferStateTimeout_;
      maxRetrans_ = other.maxRetrans_;
      maxCumAck_ = other.maxCumAck_;
      maxOutOfSeq_ = other.maxOutOfSeq_;
      maxAutoReset_ = other.maxAutoReset_;
      reuse_ = other.reuse_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Syn Clone() {
      return new Syn(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private int version_;
    /// <summary>
    ///
    ///The initial version is one (1).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "connection_id" field.</summary>
    public const int ConnectionIdFieldNumber = 2;
    private int connectionId_;
    /// <summary>
    ///
    ///connection id of sender
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = value;
      }
    }

    /// <summary>Field number for the "max_outstanding_seq" field.</summary>
    public const int MaxOutstandingSeqFieldNumber = 3;
    private int maxOutstandingSeq_;
    /// <summary>
    ///
    ///The maximum number of packets that should be sent without getting an 
    ///acknowledgment. This is used by the receiver as a means of flow control.  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxOutstandingSeq {
      get { return maxOutstandingSeq_; }
      set {
        maxOutstandingSeq_ = value;
      }
    }

    /// <summary>Field number for the "max_packet_size" field.</summary>
    public const int MaxPacketSizeFieldNumber = 4;
    private int maxPacketSize_;
    /// <summary>
    ///
    ///The maximum number of octets that can be received by the peer sending the 
    ///SYN segment.  Each peer may specify a different value.  Each peer must not 
    ///send packets greater than the value of this field received from its peer 
    ///during connection negotiation. This number includes the size of the packet 
    ///header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPacketSize {
      get { return maxPacketSize_; }
      set {
        maxPacketSize_ = value;
      }
    }

    /// <summary>Field number for the "retransmission_timeout" field.</summary>
    public const int RetransmissionTimeoutFieldNumber = 5;
    private int retransmissionTimeout_;
    /// <summary>
    ///
    ///The timeout value for retransmission of unacknowledged packets.  This value 
    ///is specified in milliseconds. The valid range is 100 to 65536. This is a 
    ///negotiable parameter, both peers must agree on the same value for this 
    ///parameter. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RetransmissionTimeout {
      get { return retransmissionTimeout_; }
      set {
        retransmissionTimeout_ = value;
      }
    }

    /// <summary>Field number for the "cumulative_ack_timeout" field.</summary>
    public const int CumulativeAckTimeoutFieldNumber = 6;
    private int cumulativeAckTimeout_;
    /// <summary>
    ///
    ///The timeout value for sending an acknowledgment segment if another segment 
    ///is not sent.  This value is specified in milliseconds. The valid range is 
    ///100 to 65536.  This is a negotiable parameter, both peers must agree on the 
    ///same value for this parameter.  In addition, this parameter should be 
    ///smaller than the Retransmission Timeout Value. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CumulativeAckTimeout {
      get { return cumulativeAckTimeout_; }
      set {
        cumulativeAckTimeout_ = value;
      }
    }

    /// <summary>Field number for the "null_segment_timeout" field.</summary>
    public const int NullSegmentTimeoutFieldNumber = 7;
    private int nullSegmentTimeout_;
    /// <summary>
    ///
    ///The timeout value for sending a null segment if a data segment has not 
    ///been sent.  Thus, the null segment acts as a keep-alive mechanism.  
    ///This value is specified in milliseconds.  The valid range is 0 to 65536.  
    ///A value of 0 disables null segments. This is a negotiable parameter, both 
    ///peers must agree on the same value for this parameter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NullSegmentTimeout {
      get { return nullSegmentTimeout_; }
      set {
        nullSegmentTimeout_ = value;
      }
    }

    /// <summary>Field number for the "transfer_state_timeout" field.</summary>
    public const int TransferStateTimeoutFieldNumber = 8;
    private int transferStateTimeout_;
    /// <summary>
    ///
    ///This timeout value indicate the amount of time the state information will 
    ///be  saved for a connection before an auto reset occurs.  This value is 
    ///specified in milliseconds.  The valid range is 0 to 65536.  This is a 
    ///negotiable parameter, both peers must agree on the same value for this 
    ///parameter.  A value of 0 indicates the connection will be auto-reset 
    ///immediately. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TransferStateTimeout {
      get { return transferStateTimeout_; }
      set {
        transferStateTimeout_ = value;
      }
    }

    /// <summary>Field number for the "max_retrans" field.</summary>
    public const int MaxRetransFieldNumber = 9;
    private int maxRetrans_;
    /// <summary>
    ///
    ///The maximum number of times consecutive retransmission(s) will be attempted 
    ///before the connection is considered broken.  The valid range for this value 
    ///is 0 to 255.  A value of 0 indicates retransmission should be attempted 
    ///forever.  This is a negotiable parameter, both peers must agree on the same 
    ///value for this parameter. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxRetrans {
      get { return maxRetrans_; }
      set {
        maxRetrans_ = value;
      }
    }

    /// <summary>Field number for the "max_cum_ack" field.</summary>
    public const int MaxCumAckFieldNumber = 10;
    private int maxCumAck_;
    /// <summary>
    ///
    ///The maximum number of acknowledgments that will be accumulated before 
    ///sending an acknowledgment if another segment is not sent. The valid range 
    ///for this value is 0 to 255.  A value of 0 indicates an acknowledgment 
    ///segment will be send immediately when a data, null, or reset segment is 
    ///received.  This is a negotiable parameter, both peers must agree on the 
    ///same value for this parameter. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxCumAck {
      get { return maxCumAck_; }
      set {
        maxCumAck_ = value;
      }
    }

    /// <summary>Field number for the "max_out_of_seq" field.</summary>
    public const int MaxOutOfSeqFieldNumber = 11;
    private int maxOutOfSeq_;
    /// <summary>
    ///
    ///The maximum number of out of sequence packets that will be accumulated 
    ///before an EACK (Extended Acknowledgement) segment is sent. The valid range 
    ///for this value is 0 to 255.  A value of 0 indicates an EACK will be sent 
    ///immediately if an out of order segment is received.  This is a negotiable 
    ///parameter, both peers must agree on the same value for this parameter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxOutOfSeq {
      get { return maxOutOfSeq_; }
      set {
        maxOutOfSeq_ = value;
      }
    }

    /// <summary>Field number for the "max_auto_reset" field.</summary>
    public const int MaxAutoResetFieldNumber = 12;
    private int maxAutoReset_;
    /// <summary>
    ///
    ///The maximum number of consecutive auto reset that will performed before 
    ///a connection is reset.  The valid range for this value is 0 to 255.  A 
    ///value of 0 indicates that an auto reset will not be attempted, the 
    ///connection will be reset immediately if an auto reset condition occurs.  
    ///This is a negotiable parameter, both peers must agree on the same value 
    ///for this parameter.  The consecutive auto reset counter is cleared once 
    ///a connection is opened.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxAutoReset {
      get { return maxAutoReset_; }
      set {
        maxAutoReset_ = value;
      }
    }

    /// <summary>Field number for the "reuse" field.</summary>
    public const int ReuseFieldNumber = 13;
    private bool reuse_;
    /// <summary>
    ///
    ///This bit must be set during an auto reset to 
    ///indicate the previous negotiable parameters 
    ///should be used.  When this bit is set the 
    ///following fields of the SYN should be set to 
    ///zero by the sender and must be ignored by the 
    ///receiver:  Maximum Segment Size, 
    ///Retransmission Timeout Value, Cumulative Ack 
    ///Timeout Value, Max Retransmissions, Max 
    ///Cumulative Ack, Max Out of Sequence, and Max
    ///Auto Reset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reuse {
      get { return reuse_; }
      set {
        reuse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Syn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Syn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (ConnectionId != other.ConnectionId) return false;
      if (MaxOutstandingSeq != other.MaxOutstandingSeq) return false;
      if (MaxPacketSize != other.MaxPacketSize) return false;
      if (RetransmissionTimeout != other.RetransmissionTimeout) return false;
      if (CumulativeAckTimeout != other.CumulativeAckTimeout) return false;
      if (NullSegmentTimeout != other.NullSegmentTimeout) return false;
      if (TransferStateTimeout != other.TransferStateTimeout) return false;
      if (MaxRetrans != other.MaxRetrans) return false;
      if (MaxCumAck != other.MaxCumAck) return false;
      if (MaxOutOfSeq != other.MaxOutOfSeq) return false;
      if (MaxAutoReset != other.MaxAutoReset) return false;
      if (Reuse != other.Reuse) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (ConnectionId != 0) hash ^= ConnectionId.GetHashCode();
      if (MaxOutstandingSeq != 0) hash ^= MaxOutstandingSeq.GetHashCode();
      if (MaxPacketSize != 0) hash ^= MaxPacketSize.GetHashCode();
      if (RetransmissionTimeout != 0) hash ^= RetransmissionTimeout.GetHashCode();
      if (CumulativeAckTimeout != 0) hash ^= CumulativeAckTimeout.GetHashCode();
      if (NullSegmentTimeout != 0) hash ^= NullSegmentTimeout.GetHashCode();
      if (TransferStateTimeout != 0) hash ^= TransferStateTimeout.GetHashCode();
      if (MaxRetrans != 0) hash ^= MaxRetrans.GetHashCode();
      if (MaxCumAck != 0) hash ^= MaxCumAck.GetHashCode();
      if (MaxOutOfSeq != 0) hash ^= MaxOutOfSeq.GetHashCode();
      if (MaxAutoReset != 0) hash ^= MaxAutoReset.GetHashCode();
      if (Reuse != false) hash ^= Reuse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (ConnectionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConnectionId);
      }
      if (MaxOutstandingSeq != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxOutstandingSeq);
      }
      if (MaxPacketSize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxPacketSize);
      }
      if (RetransmissionTimeout != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RetransmissionTimeout);
      }
      if (CumulativeAckTimeout != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CumulativeAckTimeout);
      }
      if (NullSegmentTimeout != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NullSegmentTimeout);
      }
      if (TransferStateTimeout != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TransferStateTimeout);
      }
      if (MaxRetrans != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxRetrans);
      }
      if (MaxCumAck != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MaxCumAck);
      }
      if (MaxOutOfSeq != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MaxOutOfSeq);
      }
      if (MaxAutoReset != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MaxAutoReset);
      }
      if (Reuse != false) {
        output.WriteRawTag(104);
        output.WriteBool(Reuse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (ConnectionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConnectionId);
      }
      if (MaxOutstandingSeq != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxOutstandingSeq);
      }
      if (MaxPacketSize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxPacketSize);
      }
      if (RetransmissionTimeout != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RetransmissionTimeout);
      }
      if (CumulativeAckTimeout != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CumulativeAckTimeout);
      }
      if (NullSegmentTimeout != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NullSegmentTimeout);
      }
      if (TransferStateTimeout != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TransferStateTimeout);
      }
      if (MaxRetrans != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxRetrans);
      }
      if (MaxCumAck != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MaxCumAck);
      }
      if (MaxOutOfSeq != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MaxOutOfSeq);
      }
      if (MaxAutoReset != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MaxAutoReset);
      }
      if (Reuse != false) {
        output.WriteRawTag(104);
        output.WriteBool(Reuse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (ConnectionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConnectionId);
      }
      if (MaxOutstandingSeq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxOutstandingSeq);
      }
      if (MaxPacketSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPacketSize);
      }
      if (RetransmissionTimeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetransmissionTimeout);
      }
      if (CumulativeAckTimeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CumulativeAckTimeout);
      }
      if (NullSegmentTimeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NullSegmentTimeout);
      }
      if (TransferStateTimeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TransferStateTimeout);
      }
      if (MaxRetrans != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRetrans);
      }
      if (MaxCumAck != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCumAck);
      }
      if (MaxOutOfSeq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxOutOfSeq);
      }
      if (MaxAutoReset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxAutoReset);
      }
      if (Reuse != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Syn other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.ConnectionId != 0) {
        ConnectionId = other.ConnectionId;
      }
      if (other.MaxOutstandingSeq != 0) {
        MaxOutstandingSeq = other.MaxOutstandingSeq;
      }
      if (other.MaxPacketSize != 0) {
        MaxPacketSize = other.MaxPacketSize;
      }
      if (other.RetransmissionTimeout != 0) {
        RetransmissionTimeout = other.RetransmissionTimeout;
      }
      if (other.CumulativeAckTimeout != 0) {
        CumulativeAckTimeout = other.CumulativeAckTimeout;
      }
      if (other.NullSegmentTimeout != 0) {
        NullSegmentTimeout = other.NullSegmentTimeout;
      }
      if (other.TransferStateTimeout != 0) {
        TransferStateTimeout = other.TransferStateTimeout;
      }
      if (other.MaxRetrans != 0) {
        MaxRetrans = other.MaxRetrans;
      }
      if (other.MaxCumAck != 0) {
        MaxCumAck = other.MaxCumAck;
      }
      if (other.MaxOutOfSeq != 0) {
        MaxOutOfSeq = other.MaxOutOfSeq;
      }
      if (other.MaxAutoReset != 0) {
        MaxAutoReset = other.MaxAutoReset;
      }
      if (other.Reuse != false) {
        Reuse = other.Reuse;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 16: {
            ConnectionId = input.ReadInt32();
            break;
          }
          case 24: {
            MaxOutstandingSeq = input.ReadInt32();
            break;
          }
          case 32: {
            MaxPacketSize = input.ReadInt32();
            break;
          }
          case 40: {
            RetransmissionTimeout = input.ReadInt32();
            break;
          }
          case 48: {
            CumulativeAckTimeout = input.ReadInt32();
            break;
          }
          case 56: {
            NullSegmentTimeout = input.ReadInt32();
            break;
          }
          case 64: {
            TransferStateTimeout = input.ReadInt32();
            break;
          }
          case 72: {
            MaxRetrans = input.ReadInt32();
            break;
          }
          case 80: {
            MaxCumAck = input.ReadInt32();
            break;
          }
          case 88: {
            MaxOutOfSeq = input.ReadInt32();
            break;
          }
          case 96: {
            MaxAutoReset = input.ReadInt32();
            break;
          }
          case 104: {
            Reuse = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 16: {
            ConnectionId = input.ReadInt32();
            break;
          }
          case 24: {
            MaxOutstandingSeq = input.ReadInt32();
            break;
          }
          case 32: {
            MaxPacketSize = input.ReadInt32();
            break;
          }
          case 40: {
            RetransmissionTimeout = input.ReadInt32();
            break;
          }
          case 48: {
            CumulativeAckTimeout = input.ReadInt32();
            break;
          }
          case 56: {
            NullSegmentTimeout = input.ReadInt32();
            break;
          }
          case 64: {
            TransferStateTimeout = input.ReadInt32();
            break;
          }
          case 72: {
            MaxRetrans = input.ReadInt32();
            break;
          }
          case 80: {
            MaxCumAck = input.ReadInt32();
            break;
          }
          case 88: {
            MaxOutOfSeq = input.ReadInt32();
            break;
          }
          case 96: {
            MaxAutoReset = input.ReadInt32();
            break;
          }
          case 104: {
            Reuse = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Ack : pb::IMessage<Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Ack> _parser = new pb::MessageParser<Ack>(() => new Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ack(Ack other) : this() {
      ackSeqNumber_ = other.ackSeqNumber_;
      outOfSeqPackets_ = other.outOfSeqPackets_;
      delay_ = other.delay_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ack Clone() {
      return new Ack(this);
    }

    /// <summary>Field number for the "ack_seq_number" field.</summary>
    public const int AckSeqNumberFieldNumber = 1;
    private ulong ackSeqNumber_;
    /// <summary>
    ///
    ///the sequence number of the last segment received in sequence
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AckSeqNumber {
      get { return ackSeqNumber_; }
      set {
        ackSeqNumber_ = value;
      }
    }

    /// <summary>Field number for the "out_of_seq_packets" field.</summary>
    public const int OutOfSeqPacketsFieldNumber = 2;
    private pb::ByteString outOfSeqPackets_ = pb::ByteString.Empty;
    /// <summary>
    ///
    ///bit sequence of reseived out-of-seq segments from ack_seq_number onwards
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OutOfSeqPackets {
      get { return outOfSeqPackets_; }
      set {
        outOfSeqPackets_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_delay_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> delay_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///
    ///LEDBAT bundled delay samples
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Delay {
      get { return delay_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckSeqNumber != other.AckSeqNumber) return false;
      if (OutOfSeqPackets != other.OutOfSeqPackets) return false;
      if(!delay_.Equals(other.delay_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AckSeqNumber != 0UL) hash ^= AckSeqNumber.GetHashCode();
      if (OutOfSeqPackets.Length != 0) hash ^= OutOfSeqPackets.GetHashCode();
      hash ^= delay_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckSeqNumber != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AckSeqNumber);
      }
      if (OutOfSeqPackets.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OutOfSeqPackets);
      }
      delay_.WriteTo(output, _repeated_delay_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckSeqNumber != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AckSeqNumber);
      }
      if (OutOfSeqPackets.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OutOfSeqPackets);
      }
      delay_.WriteTo(ref output, _repeated_delay_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AckSeqNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AckSeqNumber);
      }
      if (OutOfSeqPackets.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OutOfSeqPackets);
      }
      size += delay_.CalculateSize(_repeated_delay_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckSeqNumber != 0UL) {
        AckSeqNumber = other.AckSeqNumber;
      }
      if (other.OutOfSeqPackets.Length != 0) {
        OutOfSeqPackets = other.OutOfSeqPackets;
      }
      delay_.Add(other.delay_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckSeqNumber = input.ReadUInt64();
            break;
          }
          case 18: {
            OutOfSeqPackets = input.ReadBytes();
            break;
          }
          case 26:
          case 24: {
            delay_.AddEntriesFrom(input, _repeated_delay_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckSeqNumber = input.ReadUInt64();
            break;
          }
          case 18: {
            OutOfSeqPackets = input.ReadBytes();
            break;
          }
          case 26:
          case 24: {
            delay_.AddEntriesFrom(ref input, _repeated_delay_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Probe : pb::IMessage<Probe>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Probe> _parser = new pb::MessageParser<Probe>(() => new Probe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Probe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Probe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Probe(Probe other) : this() {
      id_ = other.id_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      ecnCheck_ = other.ecnCheck_;
      report_ = other.report_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Probe Clone() {
      return new Probe(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///
    ///probe id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    ///
    ///sender timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "ecn_check" field.</summary>
    public const int EcnCheckFieldNumber = 3;
    private bool ecnCheck_;
    /// <summary>
    ///
    ///test ect marker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EcnCheck {
      get { return ecnCheck_; }
      set {
        ecnCheck_ = value;
      }
    }

    /// <summary>Field number for the "report" field.</summary>
    public const int ReportFieldNumber = 4;
    private bool report_;
    /// <summary>
    ///
    ///generate report
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Report {
      get { return report_; }
      set {
        report_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Probe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Probe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (EcnCheck != other.EcnCheck) return false;
      if (Report != other.Report) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (EcnCheck != false) hash ^= EcnCheck.GetHashCode();
      if (Report != false) hash ^= Report.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (EcnCheck != false) {
        output.WriteRawTag(24);
        output.WriteBool(EcnCheck);
      }
      if (Report != false) {
        output.WriteRawTag(32);
        output.WriteBool(Report);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (EcnCheck != false) {
        output.WriteRawTag(24);
        output.WriteBool(EcnCheck);
      }
      if (Report != false) {
        output.WriteRawTag(32);
        output.WriteBool(Report);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (EcnCheck != false) {
        size += 1 + 1;
      }
      if (Report != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Probe other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.EcnCheck != false) {
        EcnCheck = other.EcnCheck;
      }
      if (other.Report != false) {
        Report = other.Report;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 24: {
            EcnCheck = input.ReadBool();
            break;
          }
          case 32: {
            Report = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 24: {
            EcnCheck = input.ReadBool();
            break;
          }
          case 32: {
            Report = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProbeReply : pb::IMessage<ProbeReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProbeReply> _parser = new pb::MessageParser<ProbeReply>(() => new ProbeReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProbeReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbeReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbeReply(ProbeReply other) : this() {
      id_ = other.id_;
      senderTimestamp_ = other.senderTimestamp_ != null ? other.senderTimestamp_.Clone() : null;
      recieverTimestamp_ = other.recieverTimestamp_ != null ? other.recieverTimestamp_.Clone() : null;
      senderAddress_ = other.senderAddress_ != null ? other.senderAddress_.Clone() : null;
      ecn_ = other.ecn_;
      report_ = other.report_ != null ? other.report_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbeReply Clone() {
      return new ProbeReply(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///
    ///probe id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "sender_timestamp" field.</summary>
    public const int SenderTimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp senderTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SenderTimestamp {
      get { return senderTimestamp_; }
      set {
        senderTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "reciever_timestamp" field.</summary>
    public const int RecieverTimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp recieverTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RecieverTimestamp {
      get { return recieverTimestamp_; }
      set {
        recieverTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "sender_address" field.</summary>
    public const int SenderAddressFieldNumber = 4;
    private global::PNet.Actor.Mesh.Protos.IPEndPoint senderAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.IPEndPoint SenderAddress {
      get { return senderAddress_; }
      set {
        senderAddress_ = value;
      }
    }

    /// <summary>Field number for the "ecn" field.</summary>
    public const int EcnFieldNumber = 5;
    private global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN ecn_ = global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN Ecn {
      get { return ecn_; }
      set {
        ecn_ = value;
      }
    }

    /// <summary>Field number for the "report" field.</summary>
    public const int ReportFieldNumber = 6;
    private global::PNet.Actor.Mesh.Protos.Report report_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.Report Report {
      get { return report_; }
      set {
        report_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProbeReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProbeReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(SenderTimestamp, other.SenderTimestamp)) return false;
      if (!object.Equals(RecieverTimestamp, other.RecieverTimestamp)) return false;
      if (!object.Equals(SenderAddress, other.SenderAddress)) return false;
      if (Ecn != other.Ecn) return false;
      if (!object.Equals(Report, other.Report)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (senderTimestamp_ != null) hash ^= SenderTimestamp.GetHashCode();
      if (recieverTimestamp_ != null) hash ^= RecieverTimestamp.GetHashCode();
      if (senderAddress_ != null) hash ^= SenderAddress.GetHashCode();
      if (Ecn != global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN.None) hash ^= Ecn.GetHashCode();
      if (report_ != null) hash ^= Report.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (senderTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SenderTimestamp);
      }
      if (recieverTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RecieverTimestamp);
      }
      if (senderAddress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SenderAddress);
      }
      if (Ecn != global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Ecn);
      }
      if (report_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Report);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (senderTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SenderTimestamp);
      }
      if (recieverTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RecieverTimestamp);
      }
      if (senderAddress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SenderAddress);
      }
      if (Ecn != global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Ecn);
      }
      if (report_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Report);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (senderTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderTimestamp);
      }
      if (recieverTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecieverTimestamp);
      }
      if (senderAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderAddress);
      }
      if (Ecn != global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Ecn);
      }
      if (report_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Report);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProbeReply other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.senderTimestamp_ != null) {
        if (senderTimestamp_ == null) {
          SenderTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SenderTimestamp.MergeFrom(other.SenderTimestamp);
      }
      if (other.recieverTimestamp_ != null) {
        if (recieverTimestamp_ == null) {
          RecieverTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RecieverTimestamp.MergeFrom(other.RecieverTimestamp);
      }
      if (other.senderAddress_ != null) {
        if (senderAddress_ == null) {
          SenderAddress = new global::PNet.Actor.Mesh.Protos.IPEndPoint();
        }
        SenderAddress.MergeFrom(other.SenderAddress);
      }
      if (other.Ecn != global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN.None) {
        Ecn = other.Ecn;
      }
      if (other.report_ != null) {
        if (report_ == null) {
          Report = new global::PNet.Actor.Mesh.Protos.Report();
        }
        Report.MergeFrom(other.Report);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (senderTimestamp_ == null) {
              SenderTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SenderTimestamp);
            break;
          }
          case 26: {
            if (recieverTimestamp_ == null) {
              RecieverTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RecieverTimestamp);
            break;
          }
          case 34: {
            if (senderAddress_ == null) {
              SenderAddress = new global::PNet.Actor.Mesh.Protos.IPEndPoint();
            }
            input.ReadMessage(SenderAddress);
            break;
          }
          case 40: {
            Ecn = (global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN) input.ReadEnum();
            break;
          }
          case 50: {
            if (report_ == null) {
              Report = new global::PNet.Actor.Mesh.Protos.Report();
            }
            input.ReadMessage(Report);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (senderTimestamp_ == null) {
              SenderTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SenderTimestamp);
            break;
          }
          case 26: {
            if (recieverTimestamp_ == null) {
              RecieverTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RecieverTimestamp);
            break;
          }
          case 34: {
            if (senderAddress_ == null) {
              SenderAddress = new global::PNet.Actor.Mesh.Protos.IPEndPoint();
            }
            input.ReadMessage(SenderAddress);
            break;
          }
          case 40: {
            Ecn = (global::PNet.Actor.Mesh.Protos.ProbeReply.Types.ECN) input.ReadEnum();
            break;
          }
          case 50: {
            if (report_ == null) {
              Report = new global::PNet.Actor.Mesh.Protos.Report();
            }
            input.ReadMessage(Report);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ProbeReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///ect marker present
      /// </summary>
      public enum ECN {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("ECT0")] Ect0 = 1,
        [pbr::OriginalName("ECT1")] Ect1 = 2,
        [pbr::OriginalName("CE")] Ce = 3,
      }

    }
    #endregion

  }

  public sealed partial class Report : pb::IMessage<Report>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Report> _parser = new pb::MessageParser<Report>(() => new Report());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Report> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report(Report other) : this() {
      lostPackets_ = other.lostPackets_;
      duplications_ = other.duplications_;
      ecnCe_ = other.ecnCe_;
      ect_ = other.ect_;
      noEct_ = other.noEct_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report Clone() {
      return new Report(this);
    }

    /// <summary>Field number for the "lost_packets" field.</summary>
    public const int LostPacketsFieldNumber = 1;
    private int lostPackets_;
    /// <summary>
    ///
    ///Lost Packets Counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LostPackets {
      get { return lostPackets_; }
      set {
        lostPackets_ = value;
      }
    }

    /// <summary>Field number for the "duplications" field.</summary>
    public const int DuplicationsFieldNumber = 2;
    private int duplications_;
    /// <summary>
    ///
    ///Duplication Counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Duplications {
      get { return duplications_; }
      set {
        duplications_ = value;
      }
    }

    /// <summary>Field number for the "ecn_ce" field.</summary>
    public const int EcnCeFieldNumber = 3;
    private int ecnCe_;
    /// <summary>
    ///
    ///ECN-CE Counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EcnCe {
      get { return ecnCe_; }
      set {
        ecnCe_ = value;
      }
    }

    /// <summary>Field number for the "ect" field.</summary>
    public const int EctFieldNumber = 4;
    private int ect_;
    /// <summary>
    ///
    ///ECT (0/1) Counters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ect {
      get { return ect_; }
      set {
        ect_ = value;
      }
    }

    /// <summary>Field number for the "no_ect" field.</summary>
    public const int NoEctFieldNumber = 5;
    private int noEct_;
    /// <summary>
    ///
    ///not-ECT Counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NoEct {
      get { return noEct_; }
      set {
        noEct_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Report);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Report other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LostPackets != other.LostPackets) return false;
      if (Duplications != other.Duplications) return false;
      if (EcnCe != other.EcnCe) return false;
      if (Ect != other.Ect) return false;
      if (NoEct != other.NoEct) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LostPackets != 0) hash ^= LostPackets.GetHashCode();
      if (Duplications != 0) hash ^= Duplications.GetHashCode();
      if (EcnCe != 0) hash ^= EcnCe.GetHashCode();
      if (Ect != 0) hash ^= Ect.GetHashCode();
      if (NoEct != 0) hash ^= NoEct.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LostPackets != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LostPackets);
      }
      if (Duplications != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Duplications);
      }
      if (EcnCe != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EcnCe);
      }
      if (Ect != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ect);
      }
      if (NoEct != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NoEct);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LostPackets != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LostPackets);
      }
      if (Duplications != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Duplications);
      }
      if (EcnCe != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EcnCe);
      }
      if (Ect != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ect);
      }
      if (NoEct != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NoEct);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LostPackets != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LostPackets);
      }
      if (Duplications != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duplications);
      }
      if (EcnCe != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EcnCe);
      }
      if (Ect != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ect);
      }
      if (NoEct != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoEct);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Report other) {
      if (other == null) {
        return;
      }
      if (other.LostPackets != 0) {
        LostPackets = other.LostPackets;
      }
      if (other.Duplications != 0) {
        Duplications = other.Duplications;
      }
      if (other.EcnCe != 0) {
        EcnCe = other.EcnCe;
      }
      if (other.Ect != 0) {
        Ect = other.Ect;
      }
      if (other.NoEct != 0) {
        NoEct = other.NoEct;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LostPackets = input.ReadInt32();
            break;
          }
          case 16: {
            Duplications = input.ReadInt32();
            break;
          }
          case 24: {
            EcnCe = input.ReadInt32();
            break;
          }
          case 32: {
            Ect = input.ReadInt32();
            break;
          }
          case 40: {
            NoEct = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LostPackets = input.ReadInt32();
            break;
          }
          case 16: {
            Duplications = input.ReadInt32();
            break;
          }
          case 24: {
            EcnCe = input.ReadInt32();
            break;
          }
          case 32: {
            Ect = input.ReadInt32();
            break;
          }
          case 40: {
            NoEct = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CandidateExchange : pb::IMessage<CandidateExchange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CandidateExchange> _parser = new pb::MessageParser<CandidateExchange>(() => new CandidateExchange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CandidateExchange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateExchange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateExchange(CandidateExchange other) : this() {
      candidates_ = other.candidates_.Clone();
      lite_ = other.lite_;
      checkPacing_ = other.checkPacing_;
      userPass_ = other.userPass_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateExchange Clone() {
      return new CandidateExchange(this);
    }

    /// <summary>Field number for the "candidates" field.</summary>
    public const int CandidatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PNet.Actor.Mesh.Protos.Candidate> _repeated_candidates_codec
        = pb::FieldCodec.ForMessage(10, global::PNet.Actor.Mesh.Protos.Candidate.Parser);
    private readonly pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Candidate> candidates_ = new pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.Candidate> Candidates {
      get { return candidates_; }
    }

    /// <summary>Field number for the "lite" field.</summary>
    public const int LiteFieldNumber = 2;
    private bool lite_;
    /// <summary>
    ///
    ///ICE lite agent type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Lite {
      get { return lite_; }
      set {
        lite_ = value;
      }
    }

    /// <summary>Field number for the "check_pacing" field.</summary>
    public const int CheckPacingFieldNumber = 3;
    private uint checkPacing_;
    /// <summary>
    ///Connectivity-Check Pacing Value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CheckPacing {
      get { return checkPacing_; }
      set {
        checkPacing_ = value;
      }
    }

    /// <summary>Field number for the "user_pass" field.</summary>
    public const int UserPassFieldNumber = 4;
    private string userPass_ = "";
    /// <summary>
    ///todo extensions ICE options
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserPass {
      get { return userPass_; }
      set {
        userPass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CandidateExchange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CandidateExchange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!candidates_.Equals(other.candidates_)) return false;
      if (Lite != other.Lite) return false;
      if (CheckPacing != other.CheckPacing) return false;
      if (UserPass != other.UserPass) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= candidates_.GetHashCode();
      if (Lite != false) hash ^= Lite.GetHashCode();
      if (CheckPacing != 0) hash ^= CheckPacing.GetHashCode();
      if (UserPass.Length != 0) hash ^= UserPass.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      candidates_.WriteTo(output, _repeated_candidates_codec);
      if (Lite != false) {
        output.WriteRawTag(16);
        output.WriteBool(Lite);
      }
      if (CheckPacing != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CheckPacing);
      }
      if (UserPass.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserPass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      candidates_.WriteTo(ref output, _repeated_candidates_codec);
      if (Lite != false) {
        output.WriteRawTag(16);
        output.WriteBool(Lite);
      }
      if (CheckPacing != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CheckPacing);
      }
      if (UserPass.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserPass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += candidates_.CalculateSize(_repeated_candidates_codec);
      if (Lite != false) {
        size += 1 + 1;
      }
      if (CheckPacing != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CheckPacing);
      }
      if (UserPass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPass);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CandidateExchange other) {
      if (other == null) {
        return;
      }
      candidates_.Add(other.candidates_);
      if (other.Lite != false) {
        Lite = other.Lite;
      }
      if (other.CheckPacing != 0) {
        CheckPacing = other.CheckPacing;
      }
      if (other.UserPass.Length != 0) {
        UserPass = other.UserPass;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            candidates_.AddEntriesFrom(input, _repeated_candidates_codec);
            break;
          }
          case 16: {
            Lite = input.ReadBool();
            break;
          }
          case 24: {
            CheckPacing = input.ReadUInt32();
            break;
          }
          case 34: {
            UserPass = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            candidates_.AddEntriesFrom(ref input, _repeated_candidates_codec);
            break;
          }
          case 16: {
            Lite = input.ReadBool();
            break;
          }
          case 24: {
            CheckPacing = input.ReadUInt32();
            break;
          }
          case 34: {
            UserPass = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Candidate : pb::IMessage<Candidate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Candidate> _parser = new pb::MessageParser<Candidate>(() => new Candidate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Candidate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Candidate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Candidate(Candidate other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      protocol_ = other.protocol_;
      foundation_ = other.foundation_;
      componentId_ = other.componentId_;
      priority_ = other.priority_;
      type_ = other.type_;
      relatedAddress_ = other.relatedAddress_ != null ? other.relatedAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Candidate Clone() {
      return new Candidate(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::PNet.Actor.Mesh.Protos.EndPoint address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.EndPoint Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 2;
    private global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol protocol_ = global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol.Udp;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "foundation" field.</summary>
    public const int FoundationFieldNumber = 3;
    private string foundation_ = "";
    /// <summary>
    ///
    ///A sequence of up to 32 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Foundation {
      get { return foundation_; }
      set {
        foundation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "component_id" field.</summary>
    public const int ComponentIdFieldNumber = 4;
    private uint componentId_;
    /// <summary>
    ///
    ///The component ID of the candidate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ComponentId {
      get { return componentId_; }
      set {
        componentId_ = value;
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 5;
    private uint priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 6;
    private global::PNet.Actor.Mesh.Protos.Candidate.Types.Type type_ = global::PNet.Actor.Mesh.Protos.Candidate.Types.Type.Host;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.Candidate.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "related_address" field.</summary>
    public const int RelatedAddressFieldNumber = 7;
    private global::PNet.Actor.Mesh.Protos.EndPoint relatedAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.EndPoint RelatedAddress {
      get { return relatedAddress_; }
      set {
        relatedAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Candidate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Candidate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (Protocol != other.Protocol) return false;
      if (Foundation != other.Foundation) return false;
      if (ComponentId != other.ComponentId) return false;
      if (Priority != other.Priority) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(RelatedAddress, other.RelatedAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (Protocol != global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol.Udp) hash ^= Protocol.GetHashCode();
      if (Foundation.Length != 0) hash ^= Foundation.GetHashCode();
      if (ComponentId != 0) hash ^= ComponentId.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (Type != global::PNet.Actor.Mesh.Protos.Candidate.Types.Type.Host) hash ^= Type.GetHashCode();
      if (relatedAddress_ != null) hash ^= RelatedAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (Protocol != global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol.Udp) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Protocol);
      }
      if (Foundation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Foundation);
      }
      if (ComponentId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ComponentId);
      }
      if (Priority != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Priority);
      }
      if (Type != global::PNet.Actor.Mesh.Protos.Candidate.Types.Type.Host) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Type);
      }
      if (relatedAddress_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RelatedAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (Protocol != global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol.Udp) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Protocol);
      }
      if (Foundation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Foundation);
      }
      if (ComponentId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ComponentId);
      }
      if (Priority != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Priority);
      }
      if (Type != global::PNet.Actor.Mesh.Protos.Candidate.Types.Type.Host) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Type);
      }
      if (relatedAddress_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RelatedAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (Protocol != global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol.Udp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (Foundation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Foundation);
      }
      if (ComponentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ComponentId);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Priority);
      }
      if (Type != global::PNet.Actor.Mesh.Protos.Candidate.Types.Type.Host) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (relatedAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelatedAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Candidate other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::PNet.Actor.Mesh.Protos.EndPoint();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.Protocol != global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol.Udp) {
        Protocol = other.Protocol;
      }
      if (other.Foundation.Length != 0) {
        Foundation = other.Foundation;
      }
      if (other.ComponentId != 0) {
        ComponentId = other.ComponentId;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.Type != global::PNet.Actor.Mesh.Protos.Candidate.Types.Type.Host) {
        Type = other.Type;
      }
      if (other.relatedAddress_ != null) {
        if (relatedAddress_ == null) {
          RelatedAddress = new global::PNet.Actor.Mesh.Protos.EndPoint();
        }
        RelatedAddress.MergeFrom(other.RelatedAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::PNet.Actor.Mesh.Protos.EndPoint();
            }
            input.ReadMessage(Address);
            break;
          }
          case 16: {
            Protocol = (global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol) input.ReadEnum();
            break;
          }
          case 26: {
            Foundation = input.ReadString();
            break;
          }
          case 32: {
            ComponentId = input.ReadUInt32();
            break;
          }
          case 40: {
            Priority = input.ReadUInt32();
            break;
          }
          case 48: {
            Type = (global::PNet.Actor.Mesh.Protos.Candidate.Types.Type) input.ReadEnum();
            break;
          }
          case 58: {
            if (relatedAddress_ == null) {
              RelatedAddress = new global::PNet.Actor.Mesh.Protos.EndPoint();
            }
            input.ReadMessage(RelatedAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::PNet.Actor.Mesh.Protos.EndPoint();
            }
            input.ReadMessage(Address);
            break;
          }
          case 16: {
            Protocol = (global::PNet.Actor.Mesh.Protos.Candidate.Types.Protocol) input.ReadEnum();
            break;
          }
          case 26: {
            Foundation = input.ReadString();
            break;
          }
          case 32: {
            ComponentId = input.ReadUInt32();
            break;
          }
          case 40: {
            Priority = input.ReadUInt32();
            break;
          }
          case 48: {
            Type = (global::PNet.Actor.Mesh.Protos.Candidate.Types.Type) input.ReadEnum();
            break;
          }
          case 58: {
            if (relatedAddress_ == null) {
              RelatedAddress = new global::PNet.Actor.Mesh.Protos.EndPoint();
            }
            input.ReadMessage(RelatedAddress);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Candidate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Protocol {
        [pbr::OriginalName("UDP")] Udp = 0,
        [pbr::OriginalName("TCP")] Tcp = 1,
      }

      public enum Type {
        [pbr::OriginalName("Host")] Host = 0,
        [pbr::OriginalName("ServerReflexive")] ServerReflexive = 1,
        [pbr::OriginalName("PeerReflexive")] PeerReflexive = 2,
        [pbr::OriginalName("Relayed")] Relayed = 3,
      }

    }
    #endregion

  }

  public sealed partial class Relay : pb::IMessage<Relay>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Relay> _parser = new pb::MessageParser<Relay>(() => new Relay());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Relay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Relay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Relay(Relay other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      seqNumber_ = other.seqNumber_;
      candidateExchange_ = other.candidateExchange_ != null ? other.candidateExchange_.Clone() : null;
      hopCount_ = other.hopCount_;
      route_ = other.route_.Clone();
      switch (other.PayloadCase) {
        case PayloadOneofCase.Packet:
          Packet = other.Packet;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Relay Clone() {
      return new Relay(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::PNet.Actor.Mesh.Protos.MeshEndPoint address_;
    /// <summary>
    ///
    ///destination address (hashed)
    ///not-set indicate a broadcast
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.MeshEndPoint Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "seq_number" field.</summary>
    public const int SeqNumberFieldNumber = 2;
    private ulong seqNumber_;
    /// <summary>
    ///
    ///senders relay sequence number
    ///duplication detection over sender + seq_number 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SeqNumber {
      get { return seqNumber_; }
      set {
        seqNumber_ = value;
      }
    }

    /// <summary>Field number for the "candidate_exchange" field.</summary>
    public const int CandidateExchangeFieldNumber = 3;
    private global::PNet.Actor.Mesh.Protos.CandidateExchange candidateExchange_;
    /// <summary>
    ///
    ///candidate exchange of sender to relay
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.CandidateExchange CandidateExchange {
      get { return candidateExchange_; }
      set {
        candidateExchange_ = value;
      }
    }

    /// <summary>Field number for the "hop_count" field.</summary>
    public const int HopCountFieldNumber = 4;
    private uint hopCount_;
    /// <summary>
    ///
    ///decrementing hop count
    ///at zero the receining node should only relay to a known peer
    ///local to remote to known-remote: 0
    ///local to remote to remote to known-remote: 1 
    ///local to cluster: 0
    ///local to cluster to known-remote: 1
    ///local to cluster1 to cluster2 to known-remote: 2
    ///broadcast to everyone: 3-4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HopCount {
      get { return hopCount_; }
      set {
        hopCount_ = value;
      }
    }

    /// <summary>Field number for the "route" field.</summary>
    public const int RouteFieldNumber = 5;
    private static readonly pb::FieldCodec<global::PNet.Actor.Mesh.Protos.MeshEndPoint> _repeated_route_codec
        = pb::FieldCodec.ForMessage(42, global::PNet.Actor.Mesh.Protos.MeshEndPoint.Parser);
    private readonly pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.MeshEndPoint> route_ = new pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.MeshEndPoint>();
    /// <summary>
    ///
    ///route of relay starting with sender 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PNet.Actor.Mesh.Protos.MeshEndPoint> Route {
      get { return route_; }
    }

    /// <summary>Field number for the "packet" field.</summary>
    public const int PacketFieldNumber = 6;
    /// <summary>
    ///
    ///transport packet 
    ///most likly the handshake_initiation 
    ///maybe handshake_reply to reply candidate_exchange
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Packet {
      get { return payloadCase_ == PayloadOneofCase.Packet ? (pb::ByteString) payload_ : pb::ByteString.Empty; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadCase_ = PayloadOneofCase.Packet;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Packet = 6,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Relay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Relay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (SeqNumber != other.SeqNumber) return false;
      if (!object.Equals(CandidateExchange, other.CandidateExchange)) return false;
      if (HopCount != other.HopCount) return false;
      if(!route_.Equals(other.route_)) return false;
      if (Packet != other.Packet) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (SeqNumber != 0UL) hash ^= SeqNumber.GetHashCode();
      if (candidateExchange_ != null) hash ^= CandidateExchange.GetHashCode();
      if (HopCount != 0) hash ^= HopCount.GetHashCode();
      hash ^= route_.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Packet) hash ^= Packet.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (SeqNumber != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SeqNumber);
      }
      if (candidateExchange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CandidateExchange);
      }
      if (HopCount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(HopCount);
      }
      route_.WriteTo(output, _repeated_route_codec);
      if (payloadCase_ == PayloadOneofCase.Packet) {
        output.WriteRawTag(50);
        output.WriteBytes(Packet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (SeqNumber != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SeqNumber);
      }
      if (candidateExchange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CandidateExchange);
      }
      if (HopCount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(HopCount);
      }
      route_.WriteTo(ref output, _repeated_route_codec);
      if (payloadCase_ == PayloadOneofCase.Packet) {
        output.WriteRawTag(50);
        output.WriteBytes(Packet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (SeqNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SeqNumber);
      }
      if (candidateExchange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CandidateExchange);
      }
      if (HopCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HopCount);
      }
      size += route_.CalculateSize(_repeated_route_codec);
      if (payloadCase_ == PayloadOneofCase.Packet) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Packet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Relay other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::PNet.Actor.Mesh.Protos.MeshEndPoint();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.SeqNumber != 0UL) {
        SeqNumber = other.SeqNumber;
      }
      if (other.candidateExchange_ != null) {
        if (candidateExchange_ == null) {
          CandidateExchange = new global::PNet.Actor.Mesh.Protos.CandidateExchange();
        }
        CandidateExchange.MergeFrom(other.CandidateExchange);
      }
      if (other.HopCount != 0) {
        HopCount = other.HopCount;
      }
      route_.Add(other.route_);
      switch (other.PayloadCase) {
        case PayloadOneofCase.Packet:
          Packet = other.Packet;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::PNet.Actor.Mesh.Protos.MeshEndPoint();
            }
            input.ReadMessage(Address);
            break;
          }
          case 16: {
            SeqNumber = input.ReadUInt64();
            break;
          }
          case 26: {
            if (candidateExchange_ == null) {
              CandidateExchange = new global::PNet.Actor.Mesh.Protos.CandidateExchange();
            }
            input.ReadMessage(CandidateExchange);
            break;
          }
          case 32: {
            HopCount = input.ReadUInt32();
            break;
          }
          case 42: {
            route_.AddEntriesFrom(input, _repeated_route_codec);
            break;
          }
          case 50: {
            Packet = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::PNet.Actor.Mesh.Protos.MeshEndPoint();
            }
            input.ReadMessage(Address);
            break;
          }
          case 16: {
            SeqNumber = input.ReadUInt64();
            break;
          }
          case 26: {
            if (candidateExchange_ == null) {
              CandidateExchange = new global::PNet.Actor.Mesh.Protos.CandidateExchange();
            }
            input.ReadMessage(CandidateExchange);
            break;
          }
          case 32: {
            HopCount = input.ReadUInt32();
            break;
          }
          case 42: {
            route_.AddEntriesFrom(ref input, _repeated_route_codec);
            break;
          }
          case 50: {
            Packet = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndPoint : pb::IMessage<EndPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndPoint> _parser = new pb::MessageParser<EndPoint>(() => new EndPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndPoint(EndPoint other) : this() {
      switch (other.ValueCase) {
        case ValueOneofCase.Ip:
          Ip = other.Ip.Clone();
          break;
        case ValueOneofCase.Dns:
          Dns = other.Dns.Clone();
          break;
        case ValueOneofCase.Mesh:
          Mesh = other.Mesh.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndPoint Clone() {
      return new EndPoint(this);
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.IPEndPoint Ip {
      get { return valueCase_ == ValueOneofCase.Ip ? (global::PNet.Actor.Mesh.Protos.IPEndPoint) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Ip;
      }
    }

    /// <summary>Field number for the "dns" field.</summary>
    public const int DnsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.DnsEndPoint Dns {
      get { return valueCase_ == ValueOneofCase.Dns ? (global::PNet.Actor.Mesh.Protos.DnsEndPoint) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Dns;
      }
    }

    /// <summary>Field number for the "mesh" field.</summary>
    public const int MeshFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.MeshEndPoint Mesh {
      get { return valueCase_ == ValueOneofCase.Mesh ? (global::PNet.Actor.Mesh.Protos.MeshEndPoint) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Mesh;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      Ip = 1,
      Dns = 2,
      Mesh = 3,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ip, other.Ip)) return false;
      if (!object.Equals(Dns, other.Dns)) return false;
      if (!object.Equals(Mesh, other.Mesh)) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (valueCase_ == ValueOneofCase.Ip) hash ^= Ip.GetHashCode();
      if (valueCase_ == ValueOneofCase.Dns) hash ^= Dns.GetHashCode();
      if (valueCase_ == ValueOneofCase.Mesh) hash ^= Mesh.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (valueCase_ == ValueOneofCase.Ip) {
        output.WriteRawTag(10);
        output.WriteMessage(Ip);
      }
      if (valueCase_ == ValueOneofCase.Dns) {
        output.WriteRawTag(18);
        output.WriteMessage(Dns);
      }
      if (valueCase_ == ValueOneofCase.Mesh) {
        output.WriteRawTag(26);
        output.WriteMessage(Mesh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (valueCase_ == ValueOneofCase.Ip) {
        output.WriteRawTag(10);
        output.WriteMessage(Ip);
      }
      if (valueCase_ == ValueOneofCase.Dns) {
        output.WriteRawTag(18);
        output.WriteMessage(Dns);
      }
      if (valueCase_ == ValueOneofCase.Mesh) {
        output.WriteRawTag(26);
        output.WriteMessage(Mesh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (valueCase_ == ValueOneofCase.Ip) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ip);
      }
      if (valueCase_ == ValueOneofCase.Dns) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dns);
      }
      if (valueCase_ == ValueOneofCase.Mesh) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mesh);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndPoint other) {
      if (other == null) {
        return;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.Ip:
          if (Ip == null) {
            Ip = new global::PNet.Actor.Mesh.Protos.IPEndPoint();
          }
          Ip.MergeFrom(other.Ip);
          break;
        case ValueOneofCase.Dns:
          if (Dns == null) {
            Dns = new global::PNet.Actor.Mesh.Protos.DnsEndPoint();
          }
          Dns.MergeFrom(other.Dns);
          break;
        case ValueOneofCase.Mesh:
          if (Mesh == null) {
            Mesh = new global::PNet.Actor.Mesh.Protos.MeshEndPoint();
          }
          Mesh.MergeFrom(other.Mesh);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::PNet.Actor.Mesh.Protos.IPEndPoint subBuilder = new global::PNet.Actor.Mesh.Protos.IPEndPoint();
            if (valueCase_ == ValueOneofCase.Ip) {
              subBuilder.MergeFrom(Ip);
            }
            input.ReadMessage(subBuilder);
            Ip = subBuilder;
            break;
          }
          case 18: {
            global::PNet.Actor.Mesh.Protos.DnsEndPoint subBuilder = new global::PNet.Actor.Mesh.Protos.DnsEndPoint();
            if (valueCase_ == ValueOneofCase.Dns) {
              subBuilder.MergeFrom(Dns);
            }
            input.ReadMessage(subBuilder);
            Dns = subBuilder;
            break;
          }
          case 26: {
            global::PNet.Actor.Mesh.Protos.MeshEndPoint subBuilder = new global::PNet.Actor.Mesh.Protos.MeshEndPoint();
            if (valueCase_ == ValueOneofCase.Mesh) {
              subBuilder.MergeFrom(Mesh);
            }
            input.ReadMessage(subBuilder);
            Mesh = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::PNet.Actor.Mesh.Protos.IPEndPoint subBuilder = new global::PNet.Actor.Mesh.Protos.IPEndPoint();
            if (valueCase_ == ValueOneofCase.Ip) {
              subBuilder.MergeFrom(Ip);
            }
            input.ReadMessage(subBuilder);
            Ip = subBuilder;
            break;
          }
          case 18: {
            global::PNet.Actor.Mesh.Protos.DnsEndPoint subBuilder = new global::PNet.Actor.Mesh.Protos.DnsEndPoint();
            if (valueCase_ == ValueOneofCase.Dns) {
              subBuilder.MergeFrom(Dns);
            }
            input.ReadMessage(subBuilder);
            Dns = subBuilder;
            break;
          }
          case 26: {
            global::PNet.Actor.Mesh.Protos.MeshEndPoint subBuilder = new global::PNet.Actor.Mesh.Protos.MeshEndPoint();
            if (valueCase_ == ValueOneofCase.Mesh) {
              subBuilder.MergeFrom(Mesh);
            }
            input.ReadMessage(subBuilder);
            Mesh = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IPEndPoint : pb::IMessage<IPEndPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IPEndPoint> _parser = new pb::MessageParser<IPEndPoint>(() => new IPEndPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IPEndPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPEndPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPEndPoint(IPEndPoint other) : this() {
      port_ = other.port_;
      switch (other.IpCase) {
        case IpOneofCase.V4:
          V4 = other.V4;
          break;
        case IpOneofCase.V6:
          V6 = other.V6;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPEndPoint Clone() {
      return new IPEndPoint(this);
    }

    /// <summary>Field number for the "v4" field.</summary>
    public const int V4FieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint V4 {
      get { return ipCase_ == IpOneofCase.V4 ? (uint) ip_ : 0; }
      set {
        ip_ = value;
        ipCase_ = IpOneofCase.V4;
      }
    }

    /// <summary>Field number for the "v6" field.</summary>
    public const int V6FieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString V6 {
      get { return ipCase_ == IpOneofCase.V6 ? (pb::ByteString) ip_ : pb::ByteString.Empty; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        ipCase_ = IpOneofCase.V6;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    private object ip_;
    /// <summary>Enum of possible cases for the "ip" oneof.</summary>
    public enum IpOneofCase {
      None = 0,
      V4 = 1,
      V6 = 2,
    }
    private IpOneofCase ipCase_ = IpOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpOneofCase IpCase {
      get { return ipCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIp() {
      ipCase_ = IpOneofCase.None;
      ip_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IPEndPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IPEndPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (V4 != other.V4) return false;
      if (V6 != other.V6) return false;
      if (Port != other.Port) return false;
      if (IpCase != other.IpCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ipCase_ == IpOneofCase.V4) hash ^= V4.GetHashCode();
      if (ipCase_ == IpOneofCase.V6) hash ^= V6.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      hash ^= (int) ipCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ipCase_ == IpOneofCase.V4) {
        output.WriteRawTag(13);
        output.WriteFixed32(V4);
      }
      if (ipCase_ == IpOneofCase.V6) {
        output.WriteRawTag(18);
        output.WriteBytes(V6);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ipCase_ == IpOneofCase.V4) {
        output.WriteRawTag(13);
        output.WriteFixed32(V4);
      }
      if (ipCase_ == IpOneofCase.V6) {
        output.WriteRawTag(18);
        output.WriteBytes(V6);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ipCase_ == IpOneofCase.V4) {
        size += 1 + 4;
      }
      if (ipCase_ == IpOneofCase.V6) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(V6);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IPEndPoint other) {
      if (other == null) {
        return;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      switch (other.IpCase) {
        case IpOneofCase.V4:
          V4 = other.V4;
          break;
        case IpOneofCase.V6:
          V6 = other.V6;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            V4 = input.ReadFixed32();
            break;
          }
          case 18: {
            V6 = input.ReadBytes();
            break;
          }
          case 24: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            V4 = input.ReadFixed32();
            break;
          }
          case 18: {
            V6 = input.ReadBytes();
            break;
          }
          case 24: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DnsEndPoint : pb::IMessage<DnsEndPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DnsEndPoint> _parser = new pb::MessageParser<DnsEndPoint>(() => new DnsEndPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DnsEndPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DnsEndPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DnsEndPoint(DnsEndPoint other) : this() {
      hostname_ = other.hostname_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DnsEndPoint Clone() {
      return new DnsEndPoint(this);
    }

    /// <summary>Field number for the "hostname" field.</summary>
    public const int HostnameFieldNumber = 1;
    private string hostname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hostname {
      get { return hostname_; }
      set {
        hostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DnsEndPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DnsEndPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hostname != other.Hostname) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hostname.Length != 0) hash ^= Hostname.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hostname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hostname);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hostname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hostname);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hostname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hostname);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DnsEndPoint other) {
      if (other == null) {
        return;
      }
      if (other.Hostname.Length != 0) {
        Hostname = other.Hostname;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hostname = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hostname = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MeshEndPoint : pb::IMessage<MeshEndPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MeshEndPoint> _parser = new pb::MessageParser<MeshEndPoint>(() => new MeshEndPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MeshEndPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeshEndPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeshEndPoint(MeshEndPoint other) : this() {
      switch (other.KeyCase) {
        case KeyOneofCase.Static:
          Static = other.Static;
          break;
        case KeyOneofCase.Hash:
          Hash = other.Hash;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeshEndPoint Clone() {
      return new MeshEndPoint(this);
    }

    /// <summary>Field number for the "static" field.</summary>
    public const int StaticFieldNumber = 1;
    /// <summary>
    ///
    ///static public key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Static {
      get { return keyCase_ == KeyOneofCase.Static ? (pb::ByteString) key_ : pb::ByteString.Empty; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        keyCase_ = KeyOneofCase.Static;
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    /// <summary>
    ///
    ///hash of static public key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return keyCase_ == KeyOneofCase.Hash ? (pb::ByteString) key_ : pb::ByteString.Empty; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        keyCase_ = KeyOneofCase.Hash;
      }
    }

    private object key_;
    /// <summary>Enum of possible cases for the "key" oneof.</summary>
    public enum KeyOneofCase {
      None = 0,
      Static = 1,
      Hash = 2,
    }
    private KeyOneofCase keyCase_ = KeyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyOneofCase KeyCase {
      get { return keyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKey() {
      keyCase_ = KeyOneofCase.None;
      key_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MeshEndPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MeshEndPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Static != other.Static) return false;
      if (Hash != other.Hash) return false;
      if (KeyCase != other.KeyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (keyCase_ == KeyOneofCase.Static) hash ^= Static.GetHashCode();
      if (keyCase_ == KeyOneofCase.Hash) hash ^= Hash.GetHashCode();
      hash ^= (int) keyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (keyCase_ == KeyOneofCase.Static) {
        output.WriteRawTag(10);
        output.WriteBytes(Static);
      }
      if (keyCase_ == KeyOneofCase.Hash) {
        output.WriteRawTag(18);
        output.WriteBytes(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (keyCase_ == KeyOneofCase.Static) {
        output.WriteRawTag(10);
        output.WriteBytes(Static);
      }
      if (keyCase_ == KeyOneofCase.Hash) {
        output.WriteRawTag(18);
        output.WriteBytes(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (keyCase_ == KeyOneofCase.Static) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Static);
      }
      if (keyCase_ == KeyOneofCase.Hash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MeshEndPoint other) {
      if (other == null) {
        return;
      }
      switch (other.KeyCase) {
        case KeyOneofCase.Static:
          Static = other.Static;
          break;
        case KeyOneofCase.Hash:
          Hash = other.Hash;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Static = input.ReadBytes();
            break;
          }
          case 18: {
            Hash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Static = input.ReadBytes();
            break;
          }
          case 18: {
            Hash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Compression : pb::IMessage<Compression>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Compression> _parser = new pb::MessageParser<Compression>(() => new Compression());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Compression> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PNet.Actor.Mesh.Protos.MeshProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Compression() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Compression(Compression other) : this() {
      type_ = other.type_;
      dictionaryId_ = other.dictionaryId_;
      dictionaryHash_ = other.dictionaryHash_;
      dictionarySource_ = other.dictionarySource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Compression Clone() {
      return new Compression(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::PNet.Actor.Mesh.Protos.Compression.Types.Type type_ = global::PNet.Actor.Mesh.Protos.Compression.Types.Type.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PNet.Actor.Mesh.Protos.Compression.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "dictionary_id" field.</summary>
    public const int DictionaryIdFieldNumber = 2;
    private int dictionaryId_;
    /// <summary>
    ///
    ///compression dictionary id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DictionaryId {
      get { return dictionaryId_; }
      set {
        dictionaryId_ = value;
      }
    }

    /// <summary>Field number for the "dictionary_hash" field.</summary>
    public const int DictionaryHashFieldNumber = 3;
    private pb::ByteString dictionaryHash_ = pb::ByteString.Empty;
    /// <summary>
    ///
    ///compression dictionary hash
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DictionaryHash {
      get { return dictionaryHash_; }
      set {
        dictionaryHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dictionary_source" field.</summary>
    public const int DictionarySourceFieldNumber = 4;
    private string dictionarySource_ = "";
    /// <summary>
    ///
    ///compression dictionary source url
    ///hash is used as key 
    ///source is used as side-channel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DictionarySource {
      get { return dictionarySource_; }
      set {
        dictionarySource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Compression);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Compression other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (DictionaryId != other.DictionaryId) return false;
      if (DictionaryHash != other.DictionaryHash) return false;
      if (DictionarySource != other.DictionarySource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::PNet.Actor.Mesh.Protos.Compression.Types.Type.None) hash ^= Type.GetHashCode();
      if (DictionaryId != 0) hash ^= DictionaryId.GetHashCode();
      if (DictionaryHash.Length != 0) hash ^= DictionaryHash.GetHashCode();
      if (DictionarySource.Length != 0) hash ^= DictionarySource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::PNet.Actor.Mesh.Protos.Compression.Types.Type.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (DictionaryId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DictionaryId);
      }
      if (DictionaryHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(DictionaryHash);
      }
      if (DictionarySource.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DictionarySource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::PNet.Actor.Mesh.Protos.Compression.Types.Type.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (DictionaryId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DictionaryId);
      }
      if (DictionaryHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(DictionaryHash);
      }
      if (DictionarySource.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DictionarySource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::PNet.Actor.Mesh.Protos.Compression.Types.Type.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (DictionaryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DictionaryId);
      }
      if (DictionaryHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DictionaryHash);
      }
      if (DictionarySource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DictionarySource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Compression other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::PNet.Actor.Mesh.Protos.Compression.Types.Type.None) {
        Type = other.Type;
      }
      if (other.DictionaryId != 0) {
        DictionaryId = other.DictionaryId;
      }
      if (other.DictionaryHash.Length != 0) {
        DictionaryHash = other.DictionaryHash;
      }
      if (other.DictionarySource.Length != 0) {
        DictionarySource = other.DictionarySource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::PNet.Actor.Mesh.Protos.Compression.Types.Type) input.ReadEnum();
            break;
          }
          case 16: {
            DictionaryId = input.ReadInt32();
            break;
          }
          case 26: {
            DictionaryHash = input.ReadBytes();
            break;
          }
          case 34: {
            DictionarySource = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::PNet.Actor.Mesh.Protos.Compression.Types.Type) input.ReadEnum();
            break;
          }
          case 16: {
            DictionaryId = input.ReadInt32();
            break;
          }
          case 26: {
            DictionaryHash = input.ReadBytes();
            break;
          }
          case 34: {
            DictionarySource = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Compression message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("DEFLATE")] Deflate = 1,
        [pbr::OriginalName("BROTLI")] Brotli = 2,
        [pbr::OriginalName("ZSTD")] Zstd = 3,
        [pbr::OriginalName("LZ4")] Lz4 = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
